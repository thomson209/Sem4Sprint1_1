package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.time.LocalDate;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MemberRepository memberRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewMember(@RequestParam String name
            , @RequestParam String address, @RequestParam String email
            , @RequestParam String phone, @RequestParam LocalDate memSince
            , @RequestParam int memDuration) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Member n = new Member();
        n.setName(name);
        n.setAddress(address);
        n.setEmail(email);
        n.setPhone(phone);
        n.setMemSince(memSince);
        n.setMemDuration(memDuration);
        memberRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Member> getAllMembers() {
        // This returns a JSON or XML with the members
        return memberRepository.findAll();
    }
}
